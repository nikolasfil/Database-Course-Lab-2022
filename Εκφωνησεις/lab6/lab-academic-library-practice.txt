-- ---------------------------------------------------------------------------------
-- 1. Εμφανίστε τους τίτλους όλων των καταχωρημένων βιβλίων στη βάση δεδομένων κατά 
-- αλφαβητική σειρά. Επιθυμούμε να εμφανίσουμε εκείνες μόνο τις εγγραφές που 
-- αρχίζουν από «D».
-- 1. Show all book titles that are stored in the database in alphabetical order. We
-- wish to show only those starting with "D"
-- ---------------------------------------------------------------------------------
-- SQL:

select titlos 
from ENTYPO 
where titlos like "D%"
order by titlos ;


-- Αποτελέσματα/Results:

Data structures,  files and databases
Database : structured techniques for design,  performance,  and management
Database analysis and design
Database design
Database modeling and design : the entity-relationship approach
Database processing : fundamentals,  design,  implementation
Database system concepts
Database: a primer

8. 

-- ---------------------------------------------------------------------------------
-- 2. Αλλάξτε το κριτήριο ώστε να εμφανίζονται μόνο οι εγγραφές που αρχίζουν από «Α»
-- έως και «F», χρησιμοποιώντας τον τελεστή Βetween.
-- 2. Modify the query to show onlye the records that start with "A" until and 
-- including "F" using the Βetween operator.
-- ---------------------------------------------------------------------------------
-- SQL:

select titlos 
from entypo 
where titlos BETWEEN "A%" and "G%"      

-- Αποτελέσματα:

-- ---------------------------------------------------------------------------------
-- 3. Εμφανίστε τους τίτλους των βιβλίων που περιέχουν την λέξη «database». 
-- Τα αποτελέσματα να παρουσιάζονται σε αντίστροφη αλφαβητική σειρά.
-- 3. Show the book titles that contain "database". Show the results in inverted
-- alphabetical order.
-- ---------------------------------------------------------------------------------
-- SQL:

-- Αποτελέσματα:

-- ---------------------------------------------------------------------------------
-- 4. Εμφανίστε τους τίτλους όλων των βιβλίων που περιέχουν τη λέξη «Database» ή τη 
-- λέξη «Sql». Ταξινομήστε τα αποτελέσματα σε αλφαβητική σειρά και εμφανίστε μόνο τα 
-- 10 πρώτα αποτελέσματα.
-- 4. Show the book titles containing "Database" or "Sql". Order the results in
-- alphabetical order and show only the first ten results.
-- (https://www.sqlite.org/lang_select.html#limitoffset)
-- ---------------------------------------------------------------------------------
-- SQL: 

select titlos 
from ENTYPO
where titlos like '%Sql%' or titlos like '%Database%'

-- Αποτελέσματα:

-- ---------------------------------------------------------------------------------
-- 5. Εμφανίστε τους κωδικούς των μελών που έχουν δανειστεί βιβλία, τα οποία αυτή τη στιγμή 
-- δεν είναι ακόμη  υποχρεωμένοι να επιστρέψουν.
-- (https://sqlite.org/lang_datefunc.html)
-- 5. Show the ids of the members who have borrowed books which they don't have 
-- to return yet, i.e. return date is not overdue.
-- (https://sqlite.org/lang_datefunc.html)
-- ---------------------------------------------------------------------------------
-- SQL:

select DISTINCT kod_melous 
from DANEIZETAI
where im_epistrofis > date()

-- Αποτελέσματα:

-- ---------------------------------------------------------------------------------
-- 6. Εμφανίστε τους κωδικούς των μελών που έχουν δανειστεί βιβλία, τα οποία δεν έχουν
-- ακόμη επιστρέψει
-- 7. Show the ids of the members who have borrowed books which they have not yet
-- returned.
-- ---------------------------------------------------------------------------------
-- SQL:

select e.kod_melous
from EPISTREFEI as e, DANEIZETAI as d 
where e.kod_melous=d.kod_melous and e.kod_entypou=d.kod_entypou and e.im_daneismou=d.im_daneismou and e.ar_entypou=d.ar_entypou
and d.im_epistrofis < e.im_pou_epistrafike

wrong 

corrcet:
select kod_melous
from (
select kod_melous,ar_entypou, im_daneismou,im_epistrofis from DANEIZETAI

EXCEPT

select kod_melous,ar_entypou,im_daneismou,im_pou_epistrafike from EPISTREFEI
)



-- Αποτελέσματα:

-- ---------------------------------------------------------------------------------
-- 7. Εμφανίστε, από μια φορά τον καθένα, τους τίτλους όλων των βιβλίων που έχουν 
-- δανειστεί τα μέλη της  «Ακαδημαϊκής  Βιβλιοθήκης», τώρα ή στο παρελθόν, ταξινομημένους
-- κατά όνομα.
-- Δοκιμάστε να το κάνετε με δύο τρόπους, μια με DISTINCT, μια χωρίς.
-- 7. Show, the titles of the books that have been borrowed by the library's 
-- members, currently or in the past, ordered by title. Show each title only once.
-- Try to do it twice: Once by using DISTINCT, once without.
-- ---------------------------------------------------------------------------------
-- SQL:

SELECT DISTINCT titlos 
from ENTYPO as e,DANEIZETAI as d ,EPISTREFEI as p 
where e.kod_entypou=d.kod_entypou or e.kod_entypou=d.kod_entypou
order by titlos

--

SELECT titlos
FROM ENTYPO as E
WHERE E.kod_entypou IN (SELECT kod_entypou from DANEIZETAI)
ORDER BY titlos

both correct 


-- Αποτελέσματα:

-- ---------------------------------------------------------------------------------
-- 8. Εμφανίστε τα μέλη (ονοματεπώνυμο) της βιβλιοθήκης που έχουν δανεισμένα βιβλία
-- τώρα αλλά δεν έχουν άλλον δανεισμό στο ιστορικό τους εκτός από τον τρέχοντα. 
-- Αγνοήστε αυτούς που έχουν  παλιότερους δανεισμούς και που δεν
-- επιστράφηκαν ακόμα.
-- 8. Show the library's members (name and lastname) who are currently having
-- borrowed books, but who have not had borrowed any books in the past. 
-- Ignore those who have borrowed in the past but have not return the books yet.
-- ---------------------------------------------------------------------------------
-- SQL:

SELECT M.onoma
FROM MELOS AS M,DANEIZETAI AS D
WHERE M.kod_melous=D.kod_melous AND D.im_epistrofis>date('now')
    AND M.kod_melous NOT IN (SELECT EP.kod_melous
                FROM EPISTREFEI AS EP);


-- Αποτελέσματα:

-- ---------------------------------------------------------------------------------
-- 9. Εμφανίστε τον τίτλο και τον αριθμό εντύπου των βιβλίων που θα έπρεπε
-- να είχαν επιστραφεί, αλλά λείπουν, ταξινομημένα με βάση τις ημέρες καθυστέρησης.
-- 9. Show the title and print id of the books that should have been returned, but
-- are still missing (not returned), order by the ammount of days overdue.
-- ---------------------------------------------------------------------------------
-- SQL:


SELECT E.titlos,E.kod_entypou
FROM ENTYPO AS E join DANEIZETAI AS D on E.kod_entypou=D.kod_entypou
WHERE D.im_epistrofis<date('now') 

AND (D.kod_melous,D.kod_entypou,D.ar_entypou) NOT IN (SELECT EP.kod_melous,EP.kod_entypou,EP.ar_entypou
                FROM EPISTREFEI AS EP, DANEIZETAI AS D
                WHERE D.kod_melous=EP.kod_melous AND D.kod_entypou=EP.kod_entypou AND D.ar_entypou=EP.ar_entypou)
ORDER BY (date('now')-D.im_epistrofis);

-- Αποτελέσματα:

-- ---------------------------------------------------------------------------------
-- 10. Εμφανίστε τον κωδικό μέλους όσων μελών έχουν επιστρέψει βιβλία με καθυστέρηση.
-- 10. Show the member id of the members who have returned books past the return date.
-- ---------------------------------------------------------------------------------
-- SQL:

select DISTINCT d.kod_melous 
-- from DANEIZETAI as d join EPISTREFEI as e on d.kod_melous=e.kod_melous
-- where e.im_pou_epistrafike > d.im_epistrofis
from DANEIZETAI as d, EPISTREFEI as e
where e.im_pou_epistrafike> d.im_epistrofis 
and e.kod_entypou=d.kod_entypou 
and e.kod_melous=d.kod_melous 
and d.ar_entypou = e.ar_entypou
and d.im_daneismou=e.im_daneismou

-- Αποτελέσματα:


